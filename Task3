import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score
from sklearn.decomposition import PCAdf = pd.read_csv("C:/Users/NAVADEEP/OneDrive/Pictures/Documents/Main flow/Task 3/customers_data.csv")

# Display the first few rows
print("First few rows of the dataset : ")
print(df.head())

# Basic Information of the Dataset
print("\nBasic Information of the dataset : ")
print(df.info())

# Shape of the dataset
print("\n Shape of the dataset : ")
print(df.shape)

# Check for missing values
print("\nMissing values : ")
print(df.isnull().sum())

# Check for duplicated values
print("\nDuplicated values : ")
print(df.duplicated().sum())

# Check for datatypes
print("\nDatatypes : ")
print(df.dtypes)

# Summary Statistics
print("\nSummary Statistics :")
print(df.describe())
print(df.describe())wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, random_state=42)
    kmeans.fit(scaled_data)
    wcss.append(kmeans.inertia_)

# Plot Elbow Curve
plt.figure(figsize=(8, 5))
plt.plot(range(1, 11), wcss, marker='o')
plt.title("Elbow Method")
plt.xlabel("Number of Clusters")
plt.ylabel("WCSS")
plt.grid(True)
plt.show()
for k in range(2, 7):
    kmeans = KMeans(n_clusters=k, random_state=42)
    preds = kmeans.fit_predict(scaled_data)
    score = silhouette_score(scaled_data, preds)
    print(f"Silhouette Score for k={k}: {score:.4f}"
kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(scaled_data)
# Display the first few rows with cluster labels
print("\nFirst 5 rows with the cluster labels : ")
print(df.head())
pca = PCA(n_components=2)
pca_components = pca.fit_transform(scaled_data)
df['PCA1'] = pca_components[:, 0]
df['PCA2'] = pca_components[:, 1]

plt.figure(figsize=(8, 6))
sns.scatterplot(data=df, x='PCA1', y='PCA2', hue='Cluster', palette='Set2', s=60)
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='purple',label='Centroids')
plt.title("Customer Clusters (PCA Visualization)")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.show()

# Pair Plot by Cluster
sns.pairplot(df, hue='Cluster', vars=['age', 'annual_income', 'spending_score'])
plt.suptitle("Pair Plot by Cluster", y=1.02)
plt.show()
